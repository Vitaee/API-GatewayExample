{
	"info": {
		"_postman_id": "3f829650-b0b3-4670-a85b-62073b2a5a59",
		"name": "API Gateway",
		"description": "Collection for testing the API Gateway microservices",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "11558282"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.access_token) {",
									"    pm.environment.set(\"authToken\", jsonData.access_token);",
									"    pm.test(\"Token saved to environment\", function () {",
									"        pm.expect(pm.environment.get(\"authToken\")).to.not.be.empty;",
									"    });",
									"}",
									"",
									"pm.test(\"Status code is 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}"
						},
						"url": "{{localUrl}}/auth/login",
						"description": "Authenticate and get JWT token"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdLCJpYXQiOjE3NDY0ODEwMTMsImV4cCI6MTc0NjQ4NDYxM30.pCFGS-yylRo5H7GJ8QogZLx39MqldBUp-vgycMmU8Ro",
								"type": "text",
								"disabled": true
							}
						],
						"url": "{{localUrl}}/health",
						"description": "Check the health status of all services"
					},
					"response": []
				},
				{
					"name": "Liveness Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/health/liveness",
						"description": "Simple liveness check for Kubernetes"
					},
					"response": []
				},
				{
					"name": "Readiness Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/health/readiness",
						"description": "Readiness check for Kubernetes"
					},
					"response": []
				}
			],
			"description": "Health-related endpoints for monitoring",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlcyI6WyJhZG1pbiJdLCJpYXQiOjE3NDY0ODYzMDQsImV4cCI6MTc0NjQ4OTkwNH0.ScxhVeIwyNcam0BfgVMw6uiMlJRY1AvwGMKy7TLvHVc"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Users Service",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/users",
						"description": "Get a list of all users"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/users/1",
						"description": "Get a specific user by ID"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"securepassword\",\n  \"fullName\": \"New User\"\n}"
						},
						"url": "{{localUrl}}/users",
						"description": "Create a new user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"updated@example.com\",\n  \"fullName\": \"Updated Name\"\n}"
						},
						"url": "{{localUrl}}/users/1",
						"description": "Update an existing user"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{localUrl}}/users/1",
						"description": "Delete a user by ID"
					},
					"response": []
				}
			],
			"description": "User service related endpoints"
		},
		{
			"name": "Products Service",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/products",
						"description": "Get a list of all products"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/products/1",
						"description": "Get a specific product by ID"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Product\",\n  \"description\": \"A description of the new product\",\n  \"price\": 99.99,\n  \"category\": \"electronics\",\n  \"stock\": 100\n}"
						},
						"url": "{{localUrl}}/products",
						"description": "Create a new product"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product Name\",\n  \"price\": 129.99,\n  \"stock\": 75\n}"
						},
						"url": "{{localUrl}}/products/1",
						"description": "Update an existing product"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{localUrl}}/products/1",
						"description": "Delete a product by ID"
					},
					"response": []
				}
			],
			"description": "Product service related endpoints"
		},
		{
			"name": "Orders Service",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/orders",
						"description": "Get a list of all orders"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{localUrl}}/orders/1",
						"description": "Get a specific order by ID"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 1,\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 2,\n      \"price\": 99.99\n    },\n    {\n      \"productId\": 3,\n      \"quantity\": 1,\n      \"price\": 149.99\n    }\n  ],\n  \"shippingAddress\": \"123 Main St, Anytown, USA\",\n  \"paymentMethod\": \"credit_card\"\n}"
						},
						"url": "{{localUrl}}/orders",
						"description": "Create a new order"
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shipped\",\n  \"trackingNumber\": \"TRK123456789\"\n}"
						},
						"url": "{{localUrl}}/orders/1/status",
						"description": "Update an order's status"
					},
					"response": []
				},
				{
					"name": "Cancel Order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{localUrl}}/orders/1",
						"description": "Cancel/delete an order"
					},
					"response": []
				}
			],
			"description": "Order service related endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "localUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}